{"version":3,"sources":["hooks/useForm.js","redux/types/types.js","redux/actions/crud.js","components/Add.js","components/Edit.js","components/List.js","components/Principal.js","redux/reducer/crudReducer.js","redux/reducer/rootReducer.js","redux/store.js","App.js","index.js"],"names":["useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","types","addItem","newItem","type","payload","deleteItem","crudUpdate","id","desc","dispatch","updateItem","Add","useDispatch","description","onSubmit","e","preventDefault","trim","length","newTodo","Date","getTime","done","className","placeholder","autoComplete","onChange","Edit","List","crud","useSelector","state","handleDelete","elementId","map","element","index","onClick","Principal","rootReducer","combineReducers","action","filter","todo","console","log","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.45889c43.chunk.js","sourcesContent":["import { useState } from 'react'\r\n\r\nexport const useForm = ( initialState={} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n    \r\n    const reset = (newFormState = initialState)=>{\r\n        setValues(newFormState);\r\n    }\r\n\r\n    const handleInputChange = ({ target }) =>{\r\n        setValues({\r\n            ...values,\r\n            [ target.name]: target.value\r\n        });\r\n    }\r\n    return [values, handleInputChange, reset];\r\n}","export const types={\r\n    createItem: '[CRUD] Agregar Item',\r\n    readItem: '[CRUD] Leyendo Items',\r\n    updateItem: '[CRUD] Actualizar Item',\r\n    deleteItem: '[CRUD] Eliminar Item'\r\n    \r\n}","import { types } from \"../types/types\";\r\n\r\nexport const crudCreate = (newItem)=>{\r\n    \r\n    return (dispatch)=>{\r\n\r\n        \r\n        dispatch(addItem(newItem))\r\n    }\r\n}\r\n\r\nconst addItem = (newItem)=>({\r\n    type: types.createItem,\r\n    payload: newItem\r\n})\r\n\r\n\r\n\r\nexport const crudDelete = (newItem)=>{\r\n    \r\n    return (dispatch)=>{\r\n        dispatch(deleteItem(newItem))\r\n    }\r\n}\r\nconst deleteItem = (newItem)=>({\r\n    type: types.deleteItem,\r\n    payload: newItem\r\n})\r\n\r\n\r\n\r\nexport const crudUpdate = (id, desc)=>{\r\n    \r\n    return (dispatch)=>{\r\n        dispatch(updateItem(id, desc))\r\n    }\r\n}\r\n\r\nconst updateItem = (id, desc)=>({\r\n    type: types.updateItem,\r\n    payload: {\r\n        id,\r\n        desc\r\n    }\r\n})","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { useForm } from '../hooks/useForm';\r\nimport { crudCreate } from '../redux/actions/crud';\r\n\r\nexport const Add = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [ {description}, handleInputChange, reset] = useForm({\r\n        description: ''\r\n    });\r\n\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        if( description.trim().length <= 1){\r\n            return;\r\n        }\r\n        const newTodo ={\r\n            id: new Date().getTime(),\r\n            desc: description,\r\n            done: false\r\n        }\r\n        // handleAdd(newTodo);\r\n\r\n        dispatch(crudCreate(newTodo));\r\n        reset();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h4>Agregar Tarea</h4>\r\n            <hr/>\r\n            <form onSubmit={ handleSubmit }>\r\n                <input \r\n                    type=\"text\"\r\n                    name=\"description\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Agregar tarea...\"\r\n                    autoComplete=\"off\"\r\n                    value={description}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <div className=\"d-grid gap-2\">\r\n                    <button \r\n                        type=\"submit\" \r\n                        className=\"btn btn-outline-primary mt-1\" \r\n                    >\r\n                        Agregar Tarea\r\n                    </button>\r\n                </div>\r\n            </form>                  \r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { useForm } from '../hooks/useForm'\r\nimport { crudUpdate } from '../redux/actions/crud';\r\n\r\nexport const Edit = ({id, desc}) => {\r\n    const dispatch = useDispatch();\r\n    const [ {description}, handleInputChange, reset] = useForm({\r\n        description: desc\r\n    });\r\n    \r\n            // console.log(id, desc)\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        // if( description.trim().length <= 1){\r\n        //     return;\r\n        // }\r\n        dispatch(crudUpdate(id, description));\r\n        reset();\r\n    }\r\n    return (\r\n        <>\r\n            <form onSubmit={ handleSubmit } className=\"description\">\r\n                <input \r\n                    type=\"text\"\r\n                    name=\"description\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Editar tarea...\"\r\n                    autoComplete=\"off\"\r\n                    value={description}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <div className=\"d-grid gap-2\">\r\n                    <button \r\n                        type=\"submit\" \r\n                        className=\"btn btn-success\" \r\n                    >\r\n                        Editar\r\n                    </button>\r\n                </div>\r\n            </form>                  \r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { crudDelete, crudUpdate } from '../redux/actions/crud';\r\nimport { Edit } from './Edit';\r\n\r\n\r\nexport const List = () => {\r\n\r\n    const crud = useSelector(state => state.crud);\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = (elementId)=>{\r\n        dispatch(crudDelete(elementId));\r\n    }\r\n\r\n    const handleEdit = (id, desc)=>{\r\n        dispatch(crudUpdate(id, desc));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h4>Listas de tareas</h4>\r\n            <hr/>\r\n            <ul className=\"list-group list-group-flush\">\r\n            {\r\n                crud.map((element, index)=>(\r\n                    <li \r\n                        key={element.id}\r\n                        className=\"list-group-item \" \r\n                    >   \r\n                        <div className=\"marco rounded animate__animated animate__backInRight\">\r\n                            {\r\n                                (!element.done)\r\n                                    ?\r\n                                    <>\r\n                                        <p \r\n                                            className={`description ${ element.done && 'complete'}`}\r\n                                            onClick={()=>handleEdit(element.id, element.desc)}\r\n                                        > \r\n                                            {index +1}. {element.desc} \r\n                                        </p>\r\n                                        <button \r\n                                            className=\"btn btn-danger\"\r\n                                            onClick={()=>handleDelete(element.id)}\r\n                                        >\r\n                                            eliminar\r\n                                        </button>\r\n                                    </>\r\n                                    :\r\n                                    <Edit id={element.id} desc={element.desc} />\r\n                            }\r\n                        </div>\r\n                    </li>\r\n                ))\r\n            }\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport '../styles/styles.css';\r\nimport { Add } from './Add';\r\nimport { List } from './List';\r\nimport 'animate.css';\r\n\r\n\r\n\r\nexport const Principal = () => {\r\n\r\n    \r\n    return (\r\n        <div className=\"container animate__animated animate__pulse\">\r\n            <h1 className=\"p-1 text-center\"> CRUD Chanchito Feliz </h1>\r\n            <hr/>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-12 col-md-5 mb-5\">\r\n                    <Add />   \r\n                </div>\r\n                <div className=\"col-sm-12 col-md-7\">\r\n                   <List />\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\nconst initialState =[\r\n    {\r\n        id: 1234,\r\n        desc: \"Aprender Python\",\r\n        done: false\r\n    },\r\n    {\r\n        id: 12346,\r\n        desc: \"Aprender Vue\",\r\n        done: false\r\n    }\r\n]\r\n\r\nexport const crudReducer = (state = initialState, action)=>{\r\n    switch (action.type) {\r\n        case types.createItem:\r\n            return [...state, action.payload];\r\n        \r\n        case types.deleteItem:\r\n            return state.filter( todo => todo.id !== action.payload);\r\n        \r\n        case types.updateItem:\r\n            console.log(action.payload)\r\n            return state.map(todo =>\r\n                (todo.id === action.payload.id)\r\n                    ? {...todo, done: !todo.done, desc: action.payload.desc}\r\n                    : todo\r\n            );\r\n        case types.readItem:\r\n            return state;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}","import { combineReducers } from \"redux\";\r\nimport { crudReducer } from \"./crudReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    crud: crudReducer\r\n})","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"./reducer/rootReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nexport const store=createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);\r\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Principal } from './components/Principal';\nimport { Provider } from 'react-redux';\nimport {store} from './redux/store';\n\nconst App = () => {\n\n  return (\n    <Provider store={store}>\n      <Principal />\n    </Provider>\n  )\n}\n\nexport default App\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  \n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}